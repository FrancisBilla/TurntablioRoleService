@page "/employees"

@using Turntablio.RoleService.Data
@inject Turntablio.RoleService.Data.Services.EmployeeService  employeeService
@inject NavigationManager navigationManager

<h2>Employee Information</h2>
<hr />

<NavLink class="nav-link " href="/employeeForm">
    <span class="oi oi-plus" aria-hidden="true"></span> <b class="lead">Add New</b>
</NavLink>
<br />

@if (employees == null)
{
<div class="text-center">
    <img src="https://crazyoffers.today/static/media/Spinner-Preloader.2b02159f.gif" style="width:400px; height:auto;"/>
    <h4><em>Loading...</em></h4>
</div>
}
else
{
<div class="lead">
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th colspan="3" class="text-center">Actions</th>
            </tr>
        </thead>

        <tbody>
            @if (employees.Count == 0)
            {
                <br />
                <tr>
                    <td class="lead text-center font-italic alert-danger" colspan="3">No record found</td>
                </tr>
            }
            @foreach (var employee in employees)
            {
        <tr>
            <td>@employee.EmployeeFirstName</td>
            <td>@employee.EmployeeLastName</td>
            <td>
                <a class="nav-link" href="employeeDetail/@employee.EmployeeId"><span class="oi oi-list-rich"></span> View</a>
            </td>
            <td>
                <a class="nav-link" href="editEmployee/@employee.EmployeeId"><span class="oi oi-pencil"></span> Edit </a>
            </td>
            @if (display)
            {
                <td>
                    <a class="nav-link" href="deleteEmployee/@employee.EmployeeId"><span class="oi oi-trash"></span> Delete </a>
                </td>
            }

        </tr>
            }
        </tbody>
    </table>

    <input type="checkbox" @bind="display"/>
</div>


}


@code {

    List<EmployeeRoleViewModel> employees;
    public bool display = false;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(3000);
        employees = await Task.Run(() => employeeService.GetEmployees());
    }
}
