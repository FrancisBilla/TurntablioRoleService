@page "/employees"

@using Turntablio.RoleService.Data
@inject Turntablio.RoleService.Data.Services.EmployeeService  employeeService

<h2>Employee Information</h2>
<hr />

<NavLink class="nav-link" href="AddEmployee">
    <span class="oi oi-plus" aria-hidden="true"></span> Add New
</NavLink>
<br />

@if (employees == null)
{
    <h4><em>Loading...</em></h4>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
            <tr>
                <td>@employee.EmployeeFirstName</td>
                <td>@employee.EmployeeLastName</td>
                <td>@employee.EmployeeEmail</td>
                <td>@employee.EmployeeAddress</td>
                @*<td>
                    <a class="nav-link" href="updateEmplyee/@employee.EmployeeId"> Update  </a>
                </td>*@
                <td>
                    <a class="nav-link" href="deleteEmplyee/@employee.EmployeeId"> Delete  </a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}


@code {

    [Parameter] public EmployeeViewModel viewModel { get; set; }

    List<Employee> employees;

    protected override async Task OnInitializedAsync()
    {
        employees = await Task.Run(() => employeeService.GetEmployees());
    }

}

