@page "/employees"

@using Turntablio.RoleService.Data
@inject Turntablio.RoleService.Data.Services.EmployeeService  employeeService

<h2>Employee Information</h2>
<hr />

<NavLink class="nav-link" href="/employeeForm">
    <span class="oi oi-plus" aria-hidden="true"></span> Add New
</NavLink>
<br />

@if (employees == null)
{
        <h4 class="text-center"><em>Loading...</em></h4>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in employees)
            {
            <tr>
                <td>@employee.EmployeeFirstName</td>
                <td>@employee.EmployeeLastName</td>
                <td>@employee.EmployeeEmail</td>
                <td>@employee.EmployeeAddress</td>

                @foreach (var r in employee.RolesViewModel)
                {
                    <td>@r.RoleName</td>
                }


                <td>
                    @*<a class="nav-link" href="editEmplyee/@employee.EmployeeId">
                <span class="oi oi-pencil"></span> Edit
            </a>*@
                </td>
                <td>
                    @*<a class="nav-link" href="deleteEmplyee/@employee.EmployeeId">
                <span class="oi oi-trash"></span> Delete
            </a>*@
                </td>
            </tr>
            }
        </tbody>
    </table>
}


@code {

    List <EmployeeRoleViewModel> employees;

    protected override async Task OnInitializedAsync()
    {
        employees = await Task.Run(() => employeeService.GetEmployees());
    }

}
