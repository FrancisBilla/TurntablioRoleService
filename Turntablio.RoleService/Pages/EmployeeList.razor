@page "/employees"

@using Turntablio.RoleService.Data
@*@inject EmployeeService EmployeeService;*@
@inject HttpClient Http


<h1>Employee List</h1>
<hr />

<a class="btn btn-success" href="/employee/new">New Employee</a>
<br /><br />

@if (Emps == null)
{
    <p><em>No employees available yet</em></p>
}
@if (!isEmployeeDataLoadFinish)
{
    <h4><em>Loading...</em></h4>
    <br />
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Address</th>
                <th>Role</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var emp in Emps)
            {
                <tr>
                    <td>@emp.employeefname.</td>
                    <td>@emp.employeelname</td>
                    <td>@emp.employeeemail</td>
                    <td>@emp.employeeaddress</td>
                    <td>@emp.employeerole</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

    bool isEmployeeDataLoadFinish = false;

    List<Emp> Emps = new List<Emp>();

    protected override async Task OnInitializedAsync()
    {
        //Emps = await Http.GetJsonAsync<List<Emp>>("https://role-api.herokuapp.com/api/employees");
                
        Emps = await Http.GetJsonAsync<List<Emp>>("https://role-api.herokuapp.com/api/employees");
        isEmployeeDataLoadFinish = true;
    }

    public class Emp
    {
        public int employeeid { get; set; }
        public string employeefname { get; set; }
        public string employeelname { get; set; }
        public string employeeemail { get; set; }
        public string employeeaddress { get; set; }
        public string employeerole { get; set; }
    }

}

