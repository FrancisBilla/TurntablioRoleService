// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Turntablio.RoleService.Data.Model;

namespace Turntablio.RoleService.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    partial class EmployeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Turntablio.RoleService.Data.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("character varying(60)")
                        .HasMaxLength(60);

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmployeeLastName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeAddress = "Norway, Taifa, Accra, Ghana",
                            EmployeeEmail = "john.erbynn@turntabl.io",
                            EmployeeFirstName = "John",
                            EmployeeLastName = "Erbynn"
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeAddress = "Tantra, Accra, Ghana",
                            EmployeeEmail = "alex.owusu@turntabl.io",
                            EmployeeFirstName = "Alex",
                            EmployeeLastName = "Owusu"
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeAddress = "Madina, Accra, Ghana",
                            EmployeeEmail = "idawud@turntabl.io",
                            EmployeeFirstName = "Dawud",
                            EmployeeLastName = "Ismail"
                        });
                });

            modelBuilder.Entity("Turntablio.RoleService.Data.Model.EmployeeRole", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRoles");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Turntablio.RoleService.Data.Model.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Developer"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Project Manager"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("Turntablio.RoleService.Data.Model.EmployeeRole", b =>
                {
                    b.HasOne("Turntablio.RoleService.Data.Model.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turntablio.RoleService.Data.Model.Role", "Role")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
